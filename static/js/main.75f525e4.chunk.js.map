{"version":3,"sources":["components/location.js","components/crew.js","components/google-map.js","App.js","index.js"],"names":["Location","props","fetchResult","fetch","then","res","json","result","setState","isLoaded","items","iss_position","error","state","this","setInterval","message","latitude","longitude","React","Component","styles","astonavts","border","borderRadius","marginBottom","marginRight","width","paddingLeft","height","display","alignItems","justifyContent","pageBreakInside","people_box","padding","flexWrap","TotalAmount","List","flexDirection","Column","columnCount","Crew","people","number","style","map","item","name","Maps","MapWithAMarker","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","Number","lng","position","googleMapURL","loadingElement","containerElement","mapElement","box","backgroundColor","LocationBox","time_box","my_box_tool","my_box_crew","App","currDate","Date","toLocaleDateString","currTime","toLocaleTimeString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75f525e4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Location extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  fetchResult = () => {\r\n    fetch(\"http://api.open-notify.org/iss-now.json\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.iss_position,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchResult();\r\n    setInterval(this.fetchResult, 5000);\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <p> Error {error.message} </p>;\r\n    } else if (!isLoaded) {\r\n      return <p> Loading... </p>;\r\n    } else {\r\n      return (\r\n        <ul>\r\n          <li> Latitude: {items.latitude}</li>\r\n          <li> Longitude: {items.longitude}</li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Location;\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  astonavts: {\r\n    border: \"1px solid black\",\r\n    borderRadius: \"20px\",\r\n    marginBottom: \"2px\",\r\n    marginRight: \"15px\",\r\n    width: \"100%\",\r\n    paddingLeft: \"10px\",\r\n    height: \"60px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    pageBreakInside: \"avoid\",\r\n  },\r\n  people_box: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    padding: \"1px\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  TotalAmount: {\r\n    border: \"1px solid black\",\r\n    borderRadius: \"20px\",\r\n    display: \"flex\",\r\n    width: \"39%\",\r\n    height: \"50px\",\r\n    border: \"2px solid black\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"15px\",\r\n  },\r\n  List: {\r\n    width: \"100%\",\r\n    height: \"300px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  Column: {\r\n    width: \"29%\",\r\n    columnCount: 2,\r\n  },\r\n};\r\n\r\nclass Crew extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  fetchResult = () => {\r\n    fetch(\"http://api.open-notify.org/astros.json\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.people,\r\n            number: result.number,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchResult();\r\n    setInterval(this.fetchResult, 5000);\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items, number } = this.state;\r\n    if (error) {\r\n      return <p> Error {error.message} </p>;\r\n    } else if (!isLoaded) {\r\n      return <p> Loading... </p>;\r\n    } else {\r\n      return (\r\n        <div style={styles.people_box}>\r\n          <div style={styles.Column}>\r\n            <div style={styles.List}>\r\n              {items.map((item) => (\r\n                <div key={item.name} style={styles.astonavts}>\r\n                  {item.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <p style={styles.TotalAmount}>Crew of {number} astonauts</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Crew;\r\n","import React from \"react\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\n\r\nconst styles = {\r\n  map: {\r\n    height: \"100%\",\r\n    width: 100,\r\n  },\r\n};\r\n\r\nclass Maps extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  fetchResult = () => {\r\n    fetch(\"http://api.open-notify.org/iss-now.json\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          items: result.iss_position,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchResult();\r\n    setInterval(this.fetchResult, 5000);\r\n  }\r\n\r\n  render() {\r\n    const { items } = this.state;\r\n\r\n    const MapWithAMarker = withScriptjs(\r\n      withGoogleMap((props) => (\r\n        <GoogleMap\r\n          defaultZoom={8}\r\n          defaultCenter={{\r\n            lat: Number(items.latitude),\r\n            lng: Number(items.longitude),\r\n          }}\r\n        >\r\n          <Marker\r\n            position={{\r\n              lat: Number(items.latitude),\r\n              lng: Number(items.longitude),\r\n            }}\r\n          />\r\n        </GoogleMap>\r\n      ))\r\n    );\r\n\r\n    return (\r\n      <MapWithAMarker\r\n        style={styles.map}\r\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA33yQhHJy9ogCYvkfa5H3tmofvW_Kn57Q&v=3.exp&libraries=geometry,drawing,places\"\r\n        loadingElement={<div style={{ height: `100%` }} />}\r\n        containerElement={<div style={{ height: `400px` }} />}\r\n        mapElement={<div style={{ height: `100%` }} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Maps;\r\n","import React from \"react\";\nimport Location from \"./components/location\";\nimport Crew from \"./components/crew\";\nimport Maps from \"./components/google-map\";\n\nconst styles = {\n  box: {\n    border: \"2px solid black\",\n    padding: \"10px\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n    backgroundColor: \"#FFF5EE\",\n  },\n  LocationBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: \"10px\",\n    border: \"2px solid black\",\n    height: \"80px\",\n    width: \"60%\",\n    paddingLeft: \"20px\",\n    borderRadius: \"20px\",\n  },\n  time_box: {\n    height: \"80px\",\n    width: \"30%\",\n    marginBottom: \"10px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    border: \"2px solid #000\",\n    borderRadius: \"20px\",\n  },\n  my_box_tool: {\n    border: \"2px solid black\",\n    padding: \"10px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  my_box_crew: {\n    border: \"2px solid black\",\n    padding: \"10px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n};\n\nclass App extends React.Component {\n  render() {\n    const currDate = new Date().toLocaleDateString();\n    const currTime = new Date().toLocaleTimeString();\n\n    return (\n      <div style={styles.box}>\n        <div style={styles.my_box_crew}>\n          <Crew />\n        </div>\n        <div style={styles.box}>\n          <Maps />\n        </div>\n        <div style={styles.my_box_tool}>\n          <div style={styles.time_box}>\n            <ul>\n              <li>Current UTC TIME: {currTime}</li>\n              <li>{currDate}</li>\n            </ul>\n          </div>\n          <div style={styles.LocationBox}>\n            <Location />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}